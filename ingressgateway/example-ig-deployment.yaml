apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app: example-ingressgateway
    istio: example-ingressgateway
  name: example-ingressgateway
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: example-ingressgateway
      istio: example-ingressgateway
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: 'false'
      labels:
        app: example-ingressgateway
        istio: example-ingressgateway
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - ppc64le
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - s390x
            weight: 2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
      containers:
      - args:
        - proxy
        - router
        - "--domain"
        - "$(POD_NAMESPACE).svc.cluster.local"
        - "--log_output_level=default:info"
        - "--drainDuration"
        - 45s
        - "--parentShutdownDuration"
        - 1m0s
        - "--connectTimeout"
        - 10s
        - "--serviceCluster"
        - istio-ingressgateway
        - "--zipkinAddress"
        - zipkin:9411
        - "--proxyAdminPort"
        - '15000'
        - "--statusPort"
        - '15020'
        - "--controlPlaneAuthPolicy"
        - NONE
        - "--discoveryAddress"
        - istio-pilot:15010
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: ISTIO_META_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: ISTIO_META_CONFIG_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SDS_ENABLED
          value: 'false'
        - name: ISTIO_META_WORKLOAD_NAME
          value: example-ingressgateway
        - name: ISTIO_META_OWNER
          value: kubernetes://api/apps/v1/namespaces/istio-system/deployments/example-ingressgateway
        - name: ISTIO_META_ROUTER_MODE
          value: sni-dnat
        image: docker.io/istio/proxyv2:1.3.2
        imagePullPolicy: IfNotPresent
        name: example-ingressgateway
        ports:
        - containerPort: 15020
        - containerPort: 80
        - containerPort: 443
        - containerPort: 31400
        - containerPort: 15029
        - containerPort: 15030
        - containerPort: 15031
        - containerPort: 15032
        - containerPort: 15443
        - containerPort: 15090
          name: http-envoy-prom
          protocol: TCP
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: "/healthz/ready"
            port: 15020
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: "/etc/certs"
          name: istio-certs
          readOnly: true
        - mountPath: "/etc/istio/ingressgateway-certs"
          name: example-ingressgateway-certs
          readOnly: true
        - mountPath: "/etc/istio/ingressgateway-ca-certs"
          name: ingressgateway-ca-certs
          readOnly: true
      serviceAccountName: example-ingressgateway-service-account
      volumes:
      - name: istio-certs
        secret:
          optional: true
          secretName: istio.istio-ingressgateway-service-account
      - name: example-ingressgateway-certs
        secret:
          optional: true
          secretName: istio-example-ingressgateway-certs
      - name: ingressgateway-ca-certs
        secret:
          optional: true
          secretName: istio-ingressgateway-ca-certs
